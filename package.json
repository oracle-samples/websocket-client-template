{
  "name": "websocket-client-template",
  "version": "0.0.1",
  "description": "Template for generating client code for a websocket streaming service",
  "main": "jsClient.js",
  "scripts": {
    "test": "jest",	  
    "release": "echo 'We do not trigger releases for this template. Normally this script should invoke \"semantic-release\"'",
    "lint": "eslint --max-warnings 0 --fix --config .eslintrc .",
    "generate:readme:toc": "markdown-toc -i README.md",
    "generate:assets": "npm run generate:readme:toc",
    "bump:version": "echo 'We do not trigger releases for this template. Normally this script should invoke \"npm --no-git-tag-version --allow-same-version version $VERSION\"'"
  },
  "keywords": [
    "asyncapi",
    "generator",
    "template",
    "websocket",
    "streaming"
  ],
  "author": "Tianshu Li <tianshu.li@oracle.com> (https://github.com/tianshu-orcl)",
  "license": "Apache-2.0",
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@asyncapi/generator-filters": "^2.1.0",
    "@asyncapi/generator-hooks": "^0.1.0",
    "@asyncapi/generator-react-sdk": "^1.0.8",
    "puppeteer": "^19.8.5"
  },
  "release": {
    "branches": [
      "master"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "generator": {
    "renderer": "react",
    "apiVersion": "v3",
    "parameters": {
      "asyncapiFileDir": {
        "description": "Custom location of the AsyncAPI file that you provided as an input in generation. By default it is located in the root of the output directory"
      },
      "maxTextSize": {
        "description": "It is possible that in case of an extremely large AsyncAPI document default mermaid recommended text size will not be enough. Then you need to explicitly make it larger",
        "default": 50000
      },
      "server": {
        "description": "The data streaming server name",
        "required": true
      }
    },
    "generator": ">=1.3.0 <3.0.0",
    "hooks": {
      "@asyncapi/generator-hooks": "createAsyncapiFile"
    }
  },
  "devDependencies": {
    "@asyncapi/generator": "^1.17.2",
    "@asyncapi/parser": "^3.0.4",
    "@babel/preset-env": "^7.15.8",
    "@babel/preset-react": "^7.14.5",
    "@semantic-release/commit-analyzer": "^12.0.0",
    "@semantic-release/github": "^10.0.3",
    "@semantic-release/npm": "^12.0.0",
    "@semantic-release/release-notes-generator": "^9.0.1",
    "all-contributors-cli": "^6.19.0",
    "conventional-changelog-conventionalcommits": "^4.4.0",
    "eslint": "^8.38.0",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sonarjs": "^0.19.0",
    "jest": "^29.5.0",
    "markdown-toc": "^1.2.0",
    "rimraf": "^3.0.2",
    "semantic-release": "^23.0.8",
    "ajv": "^8.0.1"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      [
        "@babel/preset-react",
        {
          "runtime": "automatic"
        }
      ]
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "{filters,hooks,components}/**/*.js",
      "!hooks/generateExtraFormats.js"
    ],
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx"
    ]
  }
}
